# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10Nsc7LY6Ee322LBBWecXLRoMO0crMsJs
"""

pip install kaggle pymongo pandas

!kaggle datasets download -d meirnizamani/covid19-indonesia-time-series-data # Download the dataset
!unzip covid19-indonesia-time-series-data.zip # Unzip the downloaded file

import os
import pandas as pd
from pymongo import MongoClient

# Conexión a MongoDB Atlas
URI = "mongodb+srv://dilan_291:1012449412Denis$@cluster0.hrhf9.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
client = MongoClient(URI)
db = client["ETL"]
collection = db["KAGGLE"]

# Función para transformar los datos
def transformar_datos(nombre_archivo='/content/Data_COVID19_Indonesia.csv'):
    df = pd.read_csv(nombre_archivo)

    # Transformaciones simples
    df = df.dropna(axis=1, how='all')  # Quitar columnas vacías
    df.columns = [col.strip().replace(" ", "_").lower() for col in df.columns]  # Estilo MongoDB

    return df.to_dict(orient='records')

# Función para cargar los datos a MongoDB
def cargar_datos_mongo(datos):
    try:
        collection.insert_many(datos)
        print("✅ Datos cargados correctamente en MongoDB Atlas.")
    except Exception as e:
        print(f"❌ Error al cargar los datos: {e}")

# Ejecutar proceso ETL
def ejecutar_etl():
    print("=== INICIANDO ETL DESDE ARCHIVO LOCAL ===")

    print("[1/2] Transformando datos...")
    datos_transformados = transformar_datos()

    print("[2/2] Cargando datos a MongoDB...")
    cargar_datos_mongo(datos_transformados)

    print("=== ETL FINALIZADO ===")

if __name__ == "__main__":
    ejecutar_etl()